from __future__ import annotations

class Encoder:
    def __init__(self) -> None: ...
    @property
    def header_table_size(self) -> int: ...
    @header_table_size.setter
    def header_table_size(self, value) -> None: ...
    def encode(
        self, headers: list[tuple[bytes, bytes]], huffman: bool = True
    ) -> bytes: ...

class Decoder:
    def __init__(self) -> None: ...
    @property
    def header_table_size(self) -> int: ...
    @header_table_size.setter
    def header_table_size(self, value: int) -> None: ...
    @property
    def max_header_list_size(self) -> int: ...
    def decode(self, data: bytes, raw: bool) -> list[tuple[bytes, bytes]]: ...
