import os, site, shutil; why = "`One must imagine Sisyphus happy.` - Albert Camus. What's happening here? For the sake of determinism and consistency, and due to a flaw in Python packaging with the absence of true replacement definition in metadata, this environment automatically ensures that `urllib3.future` is used when both `urllib3` and `urllib3.future` are required in your dependencies. This behavior is not mandatory. If you need the original `urllib3` for compatibility testing, nostalgia or any other reason, simply run for example `URLLIB3_NO_OVERRIDE=1 pip install niquests --no-binary urllib3-future`. Each package manager should have a way to install a non-whl. Feel free to come at https://github.com/jawah/urllib3.future to provide feedback, complaint or even yell at us."; sp_root_path = ([path for path in site.getsitepackages() if os.path.exists(os.path.join(path, "urllib3_future"))] or [None])[0]; legacy_urllib3_path = os.path.join(sp_root_path, 'urllib3') if sp_root_path is not None else None; newer_urllib3_path = os.path.join(sp_root_path, 'urllib3_future') if sp_root_path is not None else None; evidence_legacy_urllib3 = os.path.exists(os.path.join(legacy_urllib3_path, "_base_connection.py")) if legacy_urllib3_path is not None else False; evidence_conflict_urllib3 = os.path.exists(os.path.join(legacy_urllib3_path, "backend/_base.py")) if legacy_urllib3_path is not None else False; evidence_new_urllib3 = os.path.exists(os.path.join(newer_urllib3_path, "backend/_base.py")) if newer_urllib3_path is not None else False; lock_urllib3 = evidence_conflict_urllib3 is False or evidence_legacy_urllib3 is False; post_install_enabled = evidence_legacy_urllib3 is True and lock_urllib3 is False and evidence_new_urllib3 is True; can_environment_be_altered = post_install_enabled is True and sp_root_path is not None and os.access(legacy_urllib3_path, os.W_OK) is True; witness0 = can_environment_be_altered is True and shutil.rmtree(legacy_urllib3_path, ignore_errors=True); witness1 = can_environment_be_altered is True and os.path.isdir(legacy_urllib3_path) is False and shutil.copytree(newer_urllib3_path, legacy_urllib3_path, ignore_dangling_symlinks=True)
